#BlueJ class context
comment0.params=description
comment0.target=Room(java.lang.String)
comment0.text=\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ dark\ room"\ or\n\ "an\ alcove".\n\ @param\ description\ The\ room's\ description.\n
comment1.params=direction\ neighbor
comment1.target=void\ setExit(java.lang.String,\ Room)
comment1.text=\n\ Define\ an\ exit\ from\ this\ room.\n\ @param\ direction\ The\ direction\ of\ the\ exit.\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\n
comment10.params=
comment10.target=java.lang.String\ getShortDescription()
comment10.text=\n\ \n\ @return\ The\ short\ description\ of\ the\ room\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\n
comment11.params=
comment11.target=java.lang.String\ getLongDescription()
comment11.text=\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\n\ \ \ \ \ Exits\:\ north\ west\n\ @return\ A\ long\ description\ of\ this\ room\n
comment12.params=
comment12.target=java.lang.String\ getExitString()
comment12.text=\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\n\ "Exits\:\ north\ west".\n\ @return\ Details\ of\ the\ room's\ exits.\n
comment13.params=direction
comment13.target=Room\ getExit(java.lang.String)
comment13.text=\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\n\ @param\ direction\ The\ exit's\ direction.\n\ @return\ The\ room\ in\ the\ given\ direction.\n
comment2.params=
comment2.target=boolean\ isKey()
comment2.text=\n\ Checks\ to\ see\ wether\ the\ room\ has\ a\ key\ or\ not\n\ @returns\ boolean\ \n
comment3.params=x
comment3.target=void\ setKey(java.lang.Boolean)
comment3.text=\n\ Sets\ the\ boolean\ as\ to\ wether\ the\ room\ contains\ a\ key\ to\ be\ found\ or\ not\n\ @param\ x\ a\ boolean\ to\ set\ if\ the\ room\ contains\ a\ key\ or\ not\n
comment4.params=
comment4.target=boolean\ hasShop()
comment4.text=\n\ Checks\ to\ see\ wether\ the\ room\ has\ a\ shop.\n\ @returns\ boolean\ true\ if\ the\ room\ contains\ a\ shop,\ else\ false\n
comment5.params=x
comment5.target=void\ setShop(java.lang.Boolean)
comment5.text=\n\ \ Sets\ the\ room\ to\ contain\ a\ shop\n\ \ @param\ x\ boolean\ true\ or\ false\n
comment6.params=monster
comment6.target=void\ setMonster(Monster)
comment6.text=\n\ Adds\ a\ monster\ to\ the\ room\n\ @param\ monster\ a\ monster\ object\ to\ be\ added\ to\ the\ room\n
comment7.params=chest
comment7.target=void\ setChest(Chests)
comment7.text=\n\ Adds\ a\ chest\ to\ the\ room\n\ @param\ chest\ a\ chest\ object\ to\ be\ added\ to\ the\ room\n
comment8.params=
comment8.target=boolean\ checkRoomChest()
comment8.text=\n\ Checks\ the\ room\ for\ chests\n\ @return\ a\ boolean\ stating\ if\ the\ room\ contains\ any\ chests\n
comment9.params=
comment9.target=boolean\ checkRoomMonster()
comment9.text=\n\ Checks\ the\ room\ for\ monsters\n\ @return\ a\ boolean\ stating\ if\ the\ room\ contains\ any\ monsters\n
numComments=14
